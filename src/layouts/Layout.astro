---
import Menu from '../components/Menu.vue'
import Api from '../api'

export interface Props {
  title: string
}

const { title } = Astro.props
const userCode = Astro.cookies.get('userCode')

const userPoints = await Api.get(
  `/users/user-zkoins-points?userCode=${userCode.value}`
)
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/img/zk_color.jpeg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Lobster:wght@200;300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <title>{title}</title>
  </head>
  <body>
    <Menu {userPoints} />
    <div class="container">
      <slot />
    </div>
  </body>
</html>
<style lang="scss" is:global>
  body {
    margin: 0;
    font-family: Poppins;
    min-height: 90vh;
    color: rgb(243, 243, 243);
    overflow: hidden;
    background: #16071d;
  }

  .container {
    margin-top: 60px;
    max-height: calc(100vh - 60px);
    overflow: scroll;
  }

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  a {
    text-decoration: none;
    color: rgb(243, 243, 243);
  }

  .page-title {
    display: flex;
    justify-content: center;
    gap: 10px;

    h2 {
      text-align: center;
    }
  }

  select {
    width: 100%;
    padding: 10px;
    font-weight: bold;
    font-size: 18px;
    background: linear-gradient(-30deg, #aa8b00, #ff00f2);
    border: none;
    outline: none;
    color: white;
    border-radius: 8px;

    &.zk {
      background: linear-gradient(-30deg, #0d253f, #470047);
    }

    option {
      background-color: #340088;
      color: #ffffff;
      font-size: 16px;
      padding: 30px;

      &:hover {
        background-color: #f5f5f5;
      }
    }
  }

  input {
    border: none;
    outline: none;
    width: 100%;
    padding: 10px 15px;
    border-radius: 8px;
  }

  /* CSS */
  button {
    padding: 10px;
    border: none;
    outline: none;
    color: rgb(255, 255, 255);
    background: #111;
    cursor: pointer;
    position: relative;
    width: 100%;
    z-index: 0;
    border-radius: 10px;
    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;
  }

  button:before {
    content: '';
    background: linear-gradient(
      45deg,
      #ff0000,
      #ff7300,
      #fffb00,
      #48ff00,
      #00ffd5,
      #002bff,
      #7a00ff,
      #ff00c8,
      #ff0000
    );
    position: absolute;
    top: -2px;
    left: -2px;
    background-size: 400%;
    z-index: -1;
    filter: blur(5px);
    -webkit-filter: blur(5px);
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    animation: glowing-button-85 20s linear infinite;
    transition: opacity 0.3s ease-in-out;
    border-radius: 10px;
  }

  @keyframes glowing-button-85 {
    0% {
      background-position: 0 0;
    }
    50% {
      background-position: 400% 0;
    }
    100% {
      background-position: 0 0;
    }
  }

  button:after {
    z-index: -1;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: #222;
    left: 0;
    top: 0;
    border-radius: 10px;
  }
</style>
